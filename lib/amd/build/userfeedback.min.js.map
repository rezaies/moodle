{"version":3,"sources":["../src/userfeedback.js"],"names":["selectors","actions","give","remind","registerEventListeners","rootSelector","root","document","querySelector","addEventListener","e","giveAction","target","closest","preventDefault","record","dataset","hide","giveFeedback","then","recordAction","remove","catch","Notification","exception","remindAction","Ajax","call","methodname","args","contextid","M","cfg","data","getSurveyUrl","url","window","open","Error","firstSeparator","feedbackurl","indexOf","lang","encodeURIComponent","siteurl","roles","join","version","theme","themeversion","action"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle clicking on action links of the feedback alert.\n *\n * @module     core/cta_feedback\n * @copyright  2020 Shamim Rezaie <shamim@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nconst selectors = {\n    actions: {\n        give: 'a[data-action=\"give\"]',\n        remind: 'a[data-action=\"remind\"]',\n    },\n};\n\n/**\n * Attach the necessary event handlers to the action links\n *\n * @param {string} rootSelector The css selector of the container that contains action links.\n */\nexport const registerEventListeners = rootSelector => {\n    const root = document.querySelector(rootSelector);\n\n    root.addEventListener('click', e => {\n        const giveAction = e.target.closest(selectors.actions.give);\n        if (giveAction) {\n            e.preventDefault();\n            const record = !!giveAction.dataset.record;\n            const hide = !!giveAction.dataset.hide;\n            giveFeedback()\n                .then(() => {\n                    return record ? recordAction('give') : null;\n                })\n                .then(() => {\n                    if (hide) {\n                        root.remove();\n                    }\n                    return;\n                })\n                .catch(Notification.exception);\n        }\n\n        const remindAction = e.target.closest(selectors.actions.remind);\n        if (remindAction) {\n            e.preventDefault();\n            const record = !!remindAction.dataset.record;\n            const hide = !!remindAction.dataset.hide;\n            (async() => {\n                return record ? recordAction('remind') : null;\n            })()\n                .then(() => {\n                    if (hide) {\n                        root.remove();\n                    }\n                    return;\n                })\n                .catch(Notification.exception);\n        }\n    });\n};\n\n/**\n * The action function that is called when users choose to give feedback.\n *\n * @returns {Promise<void>}\n */\nconst giveFeedback = () => {\n    return Ajax.call([{\n        methodname: 'core_get_userfeedback_data',\n        args: {\n            contextid: M.cfg.contextid,\n        }\n    }])[0]\n        .then(data => {\n            return getSurveyUrl(data);\n        })\n        .then(url => {\n            if (!window.open(url)) {\n                throw new Error('Unable to open popup');\n            }\n            return;\n        });\n};\n\n/**\n * Generates the survey's URL.\n *\n * @param {Object} data The data we need to generate survey url.\n * @param {string} data.feedbackurl The base url of the feedback site.\n * @param {string} data.lang The language code.\n * @param {string} data.siteurl The wwwroot of Moodle.\n * @param {string} data.roles List of user roles.\n * @param {string} data.version List of user roles.\n * @param {string} data.theme The name of the theme the user use.\n * @param {string} data.themeversion Version of the theme.\n * @returns {string}\n */\nconst getSurveyUrl = data => {\n    const firstSeparator = data.feedbackurl.indexOf('?') == -1 ? '?' : '&';\n\n    return data.feedbackurl +\n        firstSeparator + 'lang=' + data.lang +\n        '&moodle_url=' + encodeURIComponent(data.siteurl) +\n        '&roles=' + encodeURIComponent(data.roles.join()) +\n        '&moodle_version=' + encodeURIComponent(data.version) +\n        '&theme=' + encodeURIComponent(data.theme) +\n        '&theme_version=' + encodeURIComponent(data.themeversion);\n};\n\n/**\n * Record the action that the user took.\n *\n * @param {string} action The action that the user took. Either give or remind.\n * @returns {Promise<null>}\n */\nconst recordAction = (action) => {\n    return Ajax.call([{\n        methodname: 'core_create_userfeedback_action_record',\n        args: {\n            action,\n            contextid: M.cfg.contextid,\n        }\n    }])[0];\n};\n"],"file":"userfeedback.min.js"}