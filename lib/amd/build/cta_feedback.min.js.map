{"version":3,"sources":["../src/cta_feedback.js"],"names":["SELECTORS","actions","give","remind","registerActions","rootSelector","root","document","querySelector","giveAction","remindAction","addEventListener","e","preventDefault","contextId","dataset","giveFeedback","then","remove","catch","Notification","exception","remindLater","registerFeedbackLink","elementSelector","element","request","methodname","args","contextid","Ajax","call","data","surveyUrl","lang","encodeURIComponent","siteurl","roles","join","version","theme","themeversion","window","open","Error","action"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Handle clicking on action links of the feedback alert.\n *\n * @module     core/cta_feedback\n * @copyright  2020 Shamim Rezaie <shamim@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\n\nconst SELECTORS = {\n    actions: {\n        give: 'a[data-action=\"give\"]',\n        remind: 'a[data-action=\"remind\"]',\n    },\n};\n\n/**\n * Attach the necessary event handlers to the action links\n *\n * @param {string} rootSelector The css selector of the container that contains action links.\n */\nexport const registerActions = rootSelector => {\n    const root = document.querySelector(rootSelector);\n    const giveAction = root.querySelector(SELECTORS.actions.give);\n    const remindAction = root.querySelector(SELECTORS.actions.remind);\n\n    giveAction.addEventListener('click', e => {\n        e.preventDefault();\n        const contextId = giveAction.dataset.contextId;\n        giveFeedback(contextId)\n            .then(() => {\n                root.remove();\n                return;\n            })\n            .catch(Notification.exception);\n    });\n    remindAction.addEventListener('click', e => {\n        e.preventDefault();\n        remindLater()\n            .then(() => {\n                root.remove();\n                return;\n            })\n            .catch(Notification.exception);\n    });\n};\n\n/**\n * Attach the necessary event handler to the give feedback link\n *\n * @param {string} elementSelector The css selector of the parent element\n */\nexport const registerFeedbackLink = elementSelector => {\n    const element = document.querySelector(elementSelector);\n    const giveAction = element.querySelector(SELECTORS.actions.give);\n\n    giveAction.addEventListener('click', e => {\n        e.preventDefault();\n        const contextId = giveAction.dataset.contextId;\n        giveFeedback(contextId)\n            .then(() => {\n                element.remove();\n                return;\n            })\n            .catch(Notification.exception);\n    });\n};\n\n/**\n * The action function that is called when users choose to give feedback.\n *\n * @param {number} contextId Context ID of the page the user is on\n * @returns {Promise<void>}\n */\nconst giveFeedback = async contextId => {\n    let request = {\n        methodname: 'core_cta_feedback_get_feedback_data',\n        args: {\n            contextid: contextId,\n        }\n    };\n    const data = await Ajax.call([request])[0];\n    const surveyUrl = 'https://feedback.moodle.org?lang=' + data.lang +\n        '&moodle_url=' + encodeURIComponent(data.siteurl) +\n        '&roles=' + encodeURIComponent(data.roles.join()) +\n        '&moodle_version=' + encodeURIComponent(data.version) +\n        '&theme=' + encodeURIComponent(data.theme) +\n        '&theme_version=' + encodeURIComponent(data.themeversion);\n\n    if (!window.open(surveyUrl)) {\n        throw new Error('Unable to open popup');\n    }\n\n    request = {\n        methodname: 'core_cta_feedback_record_action',\n        args: {\n            action: 'give',\n        }\n    };\n\n    Ajax.call([request]);\n};\n\n/**\n * The action function that is called when users choose the remind later action.\n * @return {Promise<*>}\n */\nconst remindLater = () => {\n    const request = {\n        methodname: 'core_cta_feedback_record_action',\n        args: {\n            action: 'remind',\n        }\n    };\n\n    return Ajax.call([request])[0];\n};\n"],"file":"cta_feedback.min.js"}